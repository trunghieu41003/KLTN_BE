openapi: 3.0.0
info:
  title: My Meal API
  description: API Documentation for My Meal functionalities
  version: 1.0.0
servers:
  - url: http://localhost:3000
  - url: https://nutrition-website-be-1.onrender.com
tags:
  - name: My meal
    description: Endpoints related to meal management
  - name: User authentication
    description: Endpoints related to user authentication
  - name: User setting
    description: Endpoints related to user setting
  - name: Dashboard
    description: Endpoints related to dashboard
paths:
  # My meal API
  /api/auth/meals:
    get:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Retrieve meal nutrition information by date
      description: Get nutritional information for a user's meals on a specific date.
      parameters:
        - name: date
          in: query
          required: true
          description: Date to retrieve meal information
          schema:
            type: string
            format: date
      responses:
        200:
          description: Successfully retrieved meal nutrition information
          content:
            application/json:
              schema:
                type: object
                properties:
                  food:
                    type: array
                    items:
                      type: object
                      properties:
                        food_id:
                          type: integer
                        name:
                          type: string
                        calories:
                          type: string
                        protein:
                          type: string
                        fat:
                          type: string
                        carbs:
                          type: string
                        ListFood_ID:
                          type: integer
                        portion:
                          type: integer
                        size:
                          type: integer
                        name_food:
                          type: string
                        meal_id:
                          type: integer

  /api/auth/meals/{meal_id}/foods/{food_id}:
    get:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Retrieve food nutrition information in a meal
      description: Retrieve detailed nutritional information of a specific food item in a meal.
      parameters:
        - name: meal_id
          in: path
          required: true
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: true
          description: Date to retrieve the food information
          schema:
            type: string
            format: date
      responses:
        200:
          description: Successfully retrieved food information
          content:
            application/json:
              schema:
                type: object
                properties:
                  food:
                    type: array
                    items:
                      type: object
                      properties:
                        food_id:
                          type: integer
                        name:
                          type: string
                        calories:
                          type: string
                        protein:
                          type: string
                        fat:
                          type: string
                        carbs:
                          type: string
                        ListFood_ID:
                          type: integer
                        portion:
                          type: integer
                        size:
                          type: integer
                        name_food:
                          type: string
                        meal_id:
                          type: integer

    put:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Update portion and size of a food item
      description: Update the portion and size of a food item in a specific meal.
      parameters:
        - name: meal_id
          in: path
          required: true
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                portion:
                  type: integer
                size:
                  type: integer
      responses:
        200:
          description: Successfully updated food information
          content:
            application/json:
              schema:
                type: object
                properties:
                  food:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        food_id:
                          type: integer
                        name:
                          type: string
                        calories:
                          type: string
                        protein:
                          type: string
                        fat:
                          type: string
                        carbs:
                          type: string
                        ListFood_ID:
                          type: integer
                        portion:
                          type: integer
                        size:
                          type: integer
                        name_food:
                          type: string
                        meal_id:
                          type: integer
    delete:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Remove food item from a meal
      description: Remove a specific food item from a meal.
      parameters:
        - name: meal_id
          in: path
          required: true
          schema:
            type: integer
        - name: food_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
      responses:
        200:
          description: Successfully removed food item from meal
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/meals/{meal_id}/foods:
    post:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Add food to meal
      description: Add a new food item to a specific meal.
      parameters:
        - name: meal_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                foodId:
                  type: integer
                portion:
                  type: integer
                size:
                  type: integer
      responses:
        200:
          description: Successfully added food to meal
          content:
            application/json:
              schema:
                type: object
                properties:
                  food:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        food_id:
                          type: integer
                        name:
                          type: string
                        calories:
                          type: string
                        protein:
                          type: string
                        fat:
                          type: string
                        carbs:
                          type: string
                        ListFood_ID:
                          type: integer
                        portion:
                          type: integer
                        size:
                          type: integer
                        name_food:
                          type: string
                        meal_id:
                          type: integer

  /api/auth/diaries:
    post:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - My meal
      summary: Add new diary
      description: Add a new diary entry for the specified date and user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date
                  description: The date for the diary entry
      responses:
        200:
          description: Successfully added diary
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Diary created successfully"
                  diary:
                    type: object
                    properties:
                      diary_id:
                        type: integer
                        description: ID of the newly created diary
                      user_id:
                        type: integer
                        description: ID of the user associated with the diary
                      calories_consumed:
                        type: string
                        nullable: true
                        description: Total calories consumed (if any)
                      calories_remaining:
                        type: string
                        description: Remaining calories allowed
                      protein_consumed:
                        type: string
                        nullable: true
                        description: Total protein consumed (if any)
                      protein_remaining:
                        type: string
                        description: Remaining protein allowed
                      fat_consumed:
                        type: string
                        nullable: true
                        description: Total fat consumed (if any)
                      fat_remaining:
                        type: string
                        description: Remaining fat allowed
                      carbs_consumed:
                        type: string
                        nullable: true
                        description: Total carbohydrates consumed (if any)
                      carbs_remaining:
                        type: string
                        description: Remaining carbohydrates allowed
                      date:
                        type: string
                        format: date
                        description: The date of the diary entry
        400:
          description: Invalid input data
        500:
          description: Internal server error

  # Authentication API
  /api/users/signup:
    post:
      tags:
        - User authentication
      summary: User Sign Up
      description: This endpoint allows a new user to register.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user
                  example: "Hieu"
                email:
                  type: string
                  description: Email address of the user
                  example: "Hieuv3@example.com"
                password:
                  type: string
                  description: User password
                  example: "123456"
                height:
                  type: number
                  description: Height in centimeters
                  example: 170
                weight:
                  type: number
                  description: Weight in kilograms
                  example: 150
                birthday:
                  type: string
                  format: date
                  description: User's birthday
                  example: "2003-04-12"
                gender:
                  type: string
                  description: User's gender
                  example: "male"
                activity_level:
                  type: string
                  description: User's activity level
                  example: "active"
                goal_type:
                  type: string
                  description: The user's fitness goal type
                  example: "weight loss"
                weight_goal:
                  type: number
                  description: The user's target weight
                  example: 100
                date:
                  type: string
                  format: date
                  description: The registration date
                  example: "2024-01-01"
      responses:
        200:
          description: Successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng ký thành công"
                  user:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Hieu"
                      height:
                        type: string
                        example: "170.00"
                      weight:
                        type: string
                        example: "150.00"
                      birthday:
                        type: string
                        example: "2003-04-12"
                      email:
                        type: string
                        example: "Hieuv3@example.com"
                      password:
                        type: string
                        example: "$2b$10$UocTJzKxXiWWtF7EytyKX.4EmkiScJvbBLQSODDFegeghlzKkCLA2"
                      calories_daily:
                        type: string
                        example: "3316.88"
                      activity_level:
                        type: string
                        example: "active"
                      gender:
                        type: string
                        example: "male"
                  goal:
                    type: array
                    items:
                      type: object
                      properties:
                        goal_type:
                          type: string
                          example: "weight loss"
                        weight_goal:
                          type: number
                          example: 100
                        date:
                          type: string
                          example: "2026-09-22"

  /api/users/login:
    post:
      tags:
        - User authentication
      summary: User Login
      description: This endpoint allows a user to log in.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: User's email address
                  example: "Hieuv3@example.com"
                password:
                  type: string
                  description: User's password
                  example: "123456"
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng nhập thành công"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImVtYWlsIjoiSGlldXYzQGV4YW1wbGUuY29tIiwiaWF0IjoxNzI5NTc5ODYyLCJleHAiOjE3Mjk1ODM0NjJ9.9zoy94W-DxCc7c0Q_gPZ5SteUbrIz2Oh1cf1wlTKNhw"

  /api/users/forgot-password:
    post:
      tags:
        - User authentication
      summary: Send a password reset email
      description: Sends an email to the user with a link to reset their password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user requesting a password reset
                  example: "user@example.com"
      responses:
        200:
          description: Successfully sent the reset password email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email reset mật khẩu đã được gửi thành công!"
        404:
          description: User not found with the provided email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Không tìm thấy người dùng với email này"
        500:
          description: Server error when sending the email
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đã xảy ra lỗi khi gửi email"

  /api/users/reset-password:
    put:
      tags:
        - User authentication
      summary: Reset the user's password
      description: This endpoint allows users to reset their password using a reset token and a new password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: The token sent to the user’s email for resetting the password
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImZvcndhc2tpYUBleGFtcGxlLmNvbSIsImlhdCI6MTYxNjI1NjYxMn0._lOpF6kgm8F9MAtdY6WoqGBJ5RpY8akHfm7yAeFbzj0"
                newPassword:
                  type: string
                  description: The new password to be set for the user
                  example: "new_secure_password123"
      responses:
        200:
          description: Successfully reset the password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password reset successfully"
        400:
          description: Invalid request (e.g., missing fields or invalid token)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid request"
        404:
          description: User not found with the provided email in the token
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User not found"
        401:
          description: Token expired or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Your session expired. Please request a new password reset."
        500:
          description: Server error while resetting the password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Error during password reset"
                  error:
                    type: string
                    example: "Token is invalid or expired"

  # Setting API
  /api/auth/users:
    get:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - User setting
      summary: Get user information
      description: Get the information of a specific user.
      parameters:
        - name: user_id
          in: query
          required: false
          description: ID of the user
          schema:
            type: integer
      responses:
        200:
          description: Get user information successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Đăng ký thành công"
                  user:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 28
                      name:
                        type: string
                        example: "Hieu"
                      height:
                        type: string
                        example: "170.00"
                      weight:
                        type: string
                        example: "150.00"
                      birthday:
                        type: string
                        example: "2003-04-12"
                      email:
                        type: string
                        example: "Hieuv333@example.com"
                      password:
                        type: string
                        example: "$2b$10$Oya3J5m5EvBxf9ju0.FjIO2XJc7Lx9fiiZmH3RyxxPUWN9iQQQXzm"
                      calories_daily:
                        type: string
                        example: "3747.81"
                      activity_level:
                        type: string
                        example: "active"
                      gender:
                        type: string
                        example: "male"
                  goal:
                    type: object
                    properties:
                      goal_id:
                        type: integer
                        example: 28
                      weight_goal:
                        type: number
                        example: 100
                      goal_type:
                        type: string
                        example: "weight loss"
                      days_to_goal:
                        type: string
                        example: "2026-10-18T17:00:00.000Z"

    put:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - User setting
      summary: Update user information
      description: Update the information of a specific user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                height:
                  type: number
                weight:
                  type: number
                birthday:
                  type: string
                  format: date
                gender:
                  type: string
                  enum: [male, female]
                activity_level:
                  type: string
                  enum:
                    [not very active, moderately active, active, very active]
                goal_type:
                  type: string
                  enum: [weight loss, weight gain]
                weight_goal:
                  type: number
      responses:
        200:
          description: Successfully updated user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Update successfully"
                  user:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: "Hieu"
                      height:
                        type: string
                        example: "170.00"
                      weight:
                        type: string
                        example: "150.00"
                      birthday:
                        type: string
                        format: date
                        example: "2003-04-12"
                      email:
                        type: string
                        example: "Hieuv1@example.com"
                      password:
                        type: string
                        example: "$2b$10$Vk2..uGK7tmJvQmsRzAli.qiiIXMogpOIA.IyynCzr2EcvbKiWFia"
                      calories_daily:
                        type: string
                        example: "3316.88"
                      activity_level:
                        type: string
                        example: "moderately active"
                      gender:
                        type: string
                        example: "male"

  # Dashboard API
  /api/auth/diaries/meals:
    get:
      security:
        - bearerAuth: [] # Endpoint này yêu cầu Bearer Token
      tags:
        - Dashboard
      summary: Get nutrition for a specific date
      description: Retrieve nutrition information (calories, protein, fat, carbs) consumed and remaining for a user on a specific date.
      parameters:
        - name: date
          in: query
          required: true
          description: Date of the meal
          schema:
            type: string
            format: date
      responses:
        200:
          description: Successfully retrieved nutrition information for the given date
          content:
            application/json:
              schema:
                type: object
                properties:
                  diary:
                    type: object
                    properties:
                      diary_id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      calories_consumed:
                        type: string
                        example: "288.89"
                      calories_remaining:
                        type: string
                        example: "2166.11"
                      protein_consumed:
                        type: string
                        example: "15.56"
                      protein_remaining:
                        type: string
                        example: "168.57"
                      fat_consumed:
                        type: string
                        example: "11.11"
                      fat_remaining:
                        type: string
                        example: "70.72"
                      carbs_consumed:
                        type: string
                        example: "37.78"
                      carbs_remaining:
                        type: string
                        example: "207.72"
                      date:
                        type: string
                        format: date-time
                        example: "2023-12-31T17:00:00.000Z"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Định dạng token (thường là JWT, có thể đổi nếu khác)
